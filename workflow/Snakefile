"""Prepdwi_recon

"""
configfile: 'config/config.yml'

module snakedwi:
    snakefile: "/scratch/knavynde/snakedwi/snakedwi/workflow/Snakefile"
    # configfile: "/scratch/knavynde/snakedwi/snakedwi/config/snakebids.yml"

include: 'rules/setup.smk'
include: 'rules/weights.smk'
include: 'rules/anatomical_segmentation.smk'
include: "rules/response_function.smk"
include: 'rules/reconstruction/reconstruction.smk'
include: 'rules/spectral_clustering/spectral_clustering.smk'
include: 'rules/tract_profiles.smk'
include: 'rules/parcellation.smk'
include: 'rules/connectome.smk'
include: 'rules/graph_theory.smk'
include: 'rules/spectral_clustering/qc.smk'
include: 'rules/tests.smk'
include: 'rules/voxelwise.smk'
#include: "rules/qc.smk"

localrules: all, qc, aggregate_profiles

rule all:
    input:
        expand(
            rules.apply_wm_mask_to_dmri.output,
            **inputs.input_lists['preproc_dwi'],
        )

rule graph_theory:
    input:
        expand(
            rules.nodal_properties.output,
            atlas=config["segmentation"],
            weight=config["connectome_weight"],
            **inputs.input_lists['preproc_dwi'],
        )

rule rich_club:
    input:
        expand(
            rules.rich_club_coefficient.output,
            atlas=config["segmentation"],
            weight=config["connectome_weight"],
            **inputs.input_lists['preproc_dwi'],
        )

rule connectome:
    input:
        expand(
            rules.get_connectome.output,
            atlas=config["segmentation"],
            weight=config["connectome_weight"],
            **inputs.input_lists['preproc_dwi'],
        )

rule tractography:
    input:
        expand(
            rules.run_sift2.output.weights,
            **inputs.input_lists['preproc_dwi']
        )

rule reformated:
    input:
        expand(
            rules.reformat_clusters.output,
            **inputs.input_lists['preproc_dwi']
        )


# rule qc:
#     input:
#         expand(
#             bids(root=qc,
#                 datatype='dwi',
#                 suffix='{suffixes}',
#                 **wildcards),
#             **inputs['input_lists']['preproc_dwi'],
#             suffixes=["viewTractography", "viewOdf", "viewInterface"]),
#         expand(
#             rules.create_tractography_png.output,
#             **inputs['input_lists']['preproc_dwi'])
